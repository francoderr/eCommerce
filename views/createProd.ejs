<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Furniture Store</title>
    <style>
      :root {
        --theme-color: #e2b659;
      }

      body {
        font-family: Arial, sans-serif;
        margin: 0;
      }

      header {
        background-color: var(--theme-color);
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 10px;
      }

      .headerDiv {
        display: flex;
      }

      #toggleSidebar {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
      }

      .container {
        display: flex;
        height: calc(100vh - 100px); /* Adjusted for header height */
      }

      .sidebar {
        width: 200px;
        background-color: #333;
        padding: 20px;
        height: 100%;
        position: fixed;
        top: 100px; /* Start below the header */
        transition: transform 0.3s ease;
      }

      .sidebar ul {
        list-style-type: none;
        padding: 0;
      }

      .sidebar ul li {
        margin: 15px 0;
      }

      .sidebar ul li a {
        text-decoration: none;
        color: white;
      }

      main {
        flex: 1;
        padding: 20px;
        background-color: #f9f9f9;
        border-left: 1px solid #ddd; 
      }

      form {
        max-width: 400px;
        margin: 0 auto;
      }

      label {
        display: block;
        margin-bottom: 10px;
        font-weight: bold;
      }

      input[type="text"],
      input[type="number"],
      textarea,
      input[type="file"] {
        width: 100%;
        padding: 10px;
        margin-bottom: 15px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
      }

      button[type="submit"] {
        background-color: var(--theme-color);
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s;
      }

      button[type="submit"]:hover {
        background-color: #d4a056;
      }

      @media (max-width: 768px) {
        .sidebar {
          display: none;
        }

        main {
          margin: 20px;
        }
      }
    </style>
  </head>
  <body>
    <header>
      <div class="headerDiv">
        <button id="toggleSidebar">â˜°</button>
        <h1>Furniture Store</h1>
      </div>
      <a href="/logout"><button>Logout</button></a>
    </header>
    <div class="container">
      <nav id="sidebar" class="sidebar">
        <ul>
          <li><a href="/dashboard">Home</a></li>
          <li><a href="/users">Users</a></li>
          <li><a href="/products">Products</a></li>
        </ul>
      </nav>
      <main>
        <h2>Create Product</h2>
        <form id="productForm">
          <label for="title">Title:</label><br />
          <input type="text" id="title" name="title" /><br />
          <label for="description">Description:</label><br />
          <textarea id="description" name="description"></textarea><br />
          <label for="image">Image:</label><br />
          <input type="file" id="image" name="image" accept="image/*" /><br />
          <label for="price">Price:</label><br />
          <input type="number" id="price" name="price" /><br /><br />
          <button type="submit">Create Product</button>
        </form>
      </main>
    </div>
    <script>
      let image = "";

      const convertBase64 = (file) => {
        return new Promise((resolve, reject) => {
          const fileReader = new FileReader();
          fileReader.readAsDataURL(file);

          fileReader.onload = () => {
            resolve(fileReader.result);
          };

          fileReader.onerror = (error) => {
            reject(error);
          };
        });
      };

      const resizeImage = (base64Str, maxWidth = 800, maxHeight = 800) => {
        return new Promise((resolve) => {
          const img = new Image();
          img.src = base64Str;
          img.onload = () => {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");

            let width = img.width;
            let height = img.height;

            if (width > height) {
              if (width > maxWidth) {
                height = Math.round((height * maxWidth) / width);
                width = maxWidth;
              }
            } else {
              if (height > maxHeight) {
                width = Math.round((width * maxHeight) / height);
                height = maxHeight;
              }
            }

            canvas.width = width;
            canvas.height = height;
            ctx.drawImage(img, 0, 0, width, height);

            resolve(canvas.toDataURL("image/jpeg"));
          };
        });
      };

      const uploadImage = async (event) => {
        const file = event.target.files[0];
        if (file) {
          const base64 = await convertBase64(file);
          image = await resizeImage(base64);
        }
      };

      document.getElementById("image").addEventListener("change", uploadImage);

      document
        .getElementById("toggleSidebar")
        .addEventListener("click", function () {
          document.getElementById("sidebar").classList.toggle("collapsed");
        });

      document
        .getElementById("productForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const title = document.getElementById("title").value;
          const description = document.getElementById("description").value;
          const price = document.getElementById("price").value;

          try {
            const response = await fetch(
              "http://localhost:3000/createProduct",
              {
                method: "POST",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({
                  image,
                  title,
                  description,
                  price,
                }),
              }
            );

            if (response.ok) {
              const data = await response.json();
              alert("Product created successfully!");
              document.getElementById("productForm").reset();
              image = ""; // Reset the image variable
              window.location.href = `/products`;
            } else {
              throw new Error("Failed to create product");
            }
          } catch (error) {
            console.error("Error:", error);
            alert("Failed to create product");
          }
        });
    </script>
  </body>
</html>
