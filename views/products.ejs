<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Furniture Store</title>
    <style>
      :root {
        --theme-color: #e2b659;
      }

      body {
        font-family: Arial, sans-serif;
        margin: 0;
      }

      header {
        background-color: var(--theme-color);
        color: white;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px 10px;
      }

      .headerDiv {
        display: flex;
      }

      #toggleSidebar {
        background: none;
        border: none;
        color: white;
        font-size: 20px;
        cursor: pointer;
      }

      .container {
        display: flex;
        height: calc(100vh - 100px); /* Adjusted for header height */
      }

      .sidebar {
        width: 200px;
        background-color: #333;
        padding: 20px;
        height: 100vh;
        position: fixed;
        top: 100px; /* Start below the header */
        transition: transform 0.3s ease;
      }

      .sidebar ul {
        list-style-type: none;
        padding: 0;
      }

      .sidebar ul li {
        margin: 15px 0;
      }

      .sidebar ul li a {
        text-decoration: none;
        color: white;
      }

      main {
        flex: 1;
        margin-left: 250px; /* Same as sidebar width */
        padding: 20px;
        overflow-y: auto;
      }

      .sidebar.collapsed {
        transform: translateX(-100%);
      }

      @media (max-width: 768px) {
        .sidebar {
          transform: translateX(-100%);
          position: absolute;
        }

        .sidebar.collapsed {
          transform: translateX(0);
        }

        main {
          margin-left: 0;
        }
      }

      table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
      }

      th,
      td {
        border: 1px solid #ddd;
        padding: 8px;
      }

      th {
        background-color: var(--theme-color);
        color: white;
      }

      tr:nth-child(even) {
        background-color: #f2f2f2;
      }

      tr:hover {
        background-color: #ddd;
      }

      .edit-button {
        background-color: var(--theme-color);
        border: none;
        color: white;
        padding: 5px 10px;
        cursor: pointer;
      }

      .edit-button:hover {
        background-color: #d4a056;
      }

      .mainHeader {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .prods {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
      }

      .product {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        background: #fff;
        transition: transform 0.2s;
      }

      .product:hover {
        transform: translateY(-10px);
        cursor: pointer;
      }

      .product img {
        width: 100%;
        height: 200px;
        object-fit: cover;
      }

      .product-details {
        padding: 15px;
      }

      .product-details h3 {
        margin: 0 0 10px 0;
        font-size: 18px;
      }

      .product-details p {
        margin: 5px 0;
        font-size: 14px;
      }

      .product-price {
        color: var(--theme-color);
        font-weight: bold;
        margin-top: 10px;
      }

      .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.4);
      }

      .modal-content {
        background-color: #fefefe;
        margin: 15% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 80%;
        max-width: 500px;
        border-radius: 8px;
      }

      .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
      }

      .close:hover,
      .close:focus {
        color: black;
        text-decoration: none;
        cursor: pointer;
      }

      .modal-content input,
      .modal-content textarea {
        width: 100%;
        padding: 10px;
        margin: 5px 0 10px 0;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      .modal-content button {
        background-color: var(--theme-color);
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }

      .modal-content button:hover {
        background-color: #d4a056;
      }
    </style>
  </head>
  <body>
    <header>
      <div class="headerDiv">
        <button id="toggleSidebar">â˜°</button>
        <h1>Furniture Store</h1>
      </div>
      <a href="/logout"><button>Logout</button></a>
    </header>
    <div class="container">
      <nav id="sidebar" class="sidebar">
        <ul>
          <li><a href="/dashboard">Home</a></li>
          <li><a href="/users">Users</a></li>
          <li><a href="/products">Products</a></li>
        </ul>
      </nav>
      <main>
        <div class="mainHeader">
          <h2>Products</h2>
          <a href="/createProd"><button>Create Product</button></a>
        </div>
        <div class="prods">
          <!-- Products will be displayed here -->
        </div>
      </main>
    </div>

    <!-- The Modal -->
    <div id="editModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Edit Product</h2>
        <input type="hidden" id="productId" />
        <input type="text" id="productTitle" placeholder="Title" />
        <textarea id="productDescription" placeholder="Description"></textarea>
        <input type="number" id="productPrice" placeholder="Price" />
        <button id="saveProduct">Save</button>
      </div>
    </div>

    <script>
      document
        .getElementById("toggleSidebar")
        .addEventListener("click", function () {
          document.getElementById("sidebar").classList.toggle("collapsed");
        });

      async function fetchProducts() {
        try {
          const response = await fetch("http://localhost:3000/listProducts");
          const data = await response.json();

          if (data.Status === "Success") {
            displayProducts(data.products);
          } else {
            console.error("Failed to retrieve products");
          }
        } catch (error) {
          console.error("Error fetching products:", error);
        }
      }

      function displayProducts(products) {
        const productsContainer = document.querySelector(".prods");
        productsContainer.innerHTML = ""; // Clear any existing content

        products.forEach((product) => {
          const productElement = document.createElement("div");
          productElement.classList.add("product");

          const productImage = document.createElement("img");
          productImage.src = `${product.image}`;
          productImage.alt = product.title;

          const productDetails = document.createElement("div");
          productDetails.classList.add("product-details");

          const productTitle = document.createElement("h3");
          productTitle.textContent = product.title;

          const productDescription = document.createElement("p");
          productDescription.textContent = product.description;

          const productPrice = document.createElement("p");
          productPrice.classList.add("product-price");
          productPrice.textContent = `$${product.price}`;

          productDetails.appendChild(productTitle);
          productDetails.appendChild(productDescription);
          productDetails.appendChild(productPrice);

          productElement.appendChild(productImage);
          productElement.appendChild(productDetails);

          productElement.addEventListener("click", () => openModal(product));

          productsContainer.appendChild(productElement);
        });
      }

      function openModal(product) {
        document.getElementById("editModal").style.display = "block";
        document.getElementById("productId").value = product._id; // Use _id if MongoDB
        document.getElementById("productTitle").value = product.title;
        document.getElementById("productDescription").value = product.description;
        document.getElementById("productPrice").value = product.price;
      }

      function closeModal() {
        document.getElementById("editModal").style.display = "none";
      }

      function saveProduct() {
        const updatedProduct = {
          productId: document.getElementById("productId").value,
          title: document.getElementById("productTitle").value,
          description: document.getElementById("productDescription").value,
          price: parseFloat(document.getElementById("productPrice").value),
        };

        // Send the updated product details to the server
        fetch(`http://localhost:3000/editProduct`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(updatedProduct),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.Status === "Success") {
              // Update the product list on success
              fetchProducts();
              closeModal();
            } else {
              console.error("Failed to update product");
            }
          })
          .catch((error) => {
            console.error("Error updating product:", error);
          });
      }

      document.querySelector(".close").addEventListener("click", closeModal);
      document.getElementById("saveProduct").addEventListener("click", saveProduct);

      // Fetch products when the page loads
      fetchProducts();
    </script>
  </body>
</html>
